/************ data model **************/
person(name,description) -> string(name), string(description).
female(name) -> string(name).
male(name) -> string(name).
parent_child(p1,p2) -> string(p1), string(p2).
person_living(p) -> string(p).

/************* problem 0 **************/
/**** Find all children of Priscilla ****/
p0(x,d) <- parent_child("Priscilla",x), person(x,d).

/************* problem 1 **************/
/**** Find all descendents of Priscilla ****/
ancsdesc(x,y) <- parent_child(x,y).
ancsdesc(x,y) <- parent_child(x,z),ancsdesc(z,y).
p1(x,d) <- ancsdesc("Priscilla",x), person(x,d).

/************* problem 2 (a) **************/
/**** Find all woman with largest number of children ****/
/* For each person, count the number of children */ 
N[x] = m  <- agg<<m = count()>> parent_child(x,y). 
// The number of children of Priscilla.
//query '_(d) <- N["Priscilla"] = d.'
// Number of children of all people females.
//query '_(x,d) <- N[x] = d, female(x).'
fc(x,d) <- N[x] = d, female(x).
M[] = m <- agg<<m = max(d)>> fc(_,d).
// Woman with most children.
//query '_(d) <- M[]=d.'
most_children_w(d) <- M[]=d.
woman_with_most_children(x, n) <- fc(x,n), most_children_w(n).


fm(x,d) <- N[x] = d, male(x).
ML[] = m <- agg<<m = max(d)>> fm(_,d).
// Male with most children.
//query '_(d) <- M[]=d.'
most_children_m(d) <- ML[]=d.
male_with_most_children(x, n) <- fm(x,n), most_children_m(n).

dd2(x,n) <- woman_with_most_children(x, n).
dd2(x,n) <- male_with_most_children(x, n).

d2(x,n,d) <- dd2(x,n), people(x,d).

/************* problem 3 **************/
/**** Find the minimum lineage of every living person n ****/
//First get the parents of all people
parents(x, y) <- person(x), parent_child(x, y). 
M[] = m <- agg<<m = min(d)>> parents(_,d).
