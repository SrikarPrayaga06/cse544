/*(10 points) For this query you should also measure and report the runtime; it may be approximate (expect it around 10'-30') . Find all distinct pairs of countries that share both a mountain and a sea. Your query should return a list of pairs of country names. Avoid including a country with itself, like in (France,France), and avoid listing both (France,Korea) and (Korea,France) (not a real answer). Name your output attributes first_country, second_country. [Result Size: 7]
*/	



USE hw5;


select distinct a.c_name as first_country, b.c_name  as second_country
from 
    (SELECT y.name as c_name, s.name as sea_name, m.name as mt_name
	from world x, x.mondial.country y, sea s, split(s.`-country`, " ") cc_list, mountain m, split(m.`-country`, " ") cc_list2  
	where cc_list = y.`-car_code` and cc_list2 = y.`-car_code` 
	) as a, 
	(SELECT y.name as c_name, s.name as sea_name, m.name as mt_name
	from world x, x.mondial.country y, sea s, split(s.`-country`, " ") cc_list, mountain m, split(m.`-country`, " ") cc_list2  
	where cc_list = y.`-car_code` and cc_list2 = y.`-car_code` 
	) as b

where
	a.sea_name = b.sea_name and
	a.mt_name = b.mt_name and 
	a.c_name > b.c_name 
;




/*
Runtime:
		"elapsedTime": "191.293066ms",
		"executionTime": "190.548846ms",
*/




